version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: civictrack-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: civictrack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - civictrack-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: civictrack-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - civictrack-network

  # Backend API Service
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: civictrack-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/civictrack
      - REDIS_URL=redis://:redis123@redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - civictrack-network
    volumes:
      - ./apps/backend:/app
      - /app/node_modules

  # Frontend Next.js Application
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: civictrack-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXTAUTH_SECRET=your-nextauth-secret-here
      - NEXTAUTH_URL=http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - civictrack-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: civictrack-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - civictrack-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  civictrack-network:
    driver: bridge
